variable: decimal-places
variable: fixed-point-scaling

: _power  ( a x y -- a )
	0 -> drop drop ;;
	_ -> push stash *  pop pop 1- tail: _power ;;
;
: power   ( x y -- n )
	push push 1 pop pop _power
;

: fixed-point  ( n -- )
	dup decimal-places !
	10 swap power  fixed-point-scaling  !
;


: split-decimal ( d -- f i )
	fixed-point-scaling @   divmod   fixed-point-scaling @  +
;

: _putd  ( 0 c ... -- )
	0 -> drop ;;
	_ -> putc tail: _putd ;;
;
: putd  ( d -- )
	-- TODO : fails to include leading zeroes on fractional part
	putsign
	split-decimal   swap putn   '.' putc
	10 decompose drop _putd
;

exception: DecimalParseError

variable: int-portion
variable: frac-portion
variable: frac-scale
: decimal-int-digit
	'.' -> drop true ;;
	dup '0' '9' between? if
		'0' - 
		int-portion @   10 * +   int-portion !
	else
		DecimalParseError raise
	endif
	false
;
: decimal-frac-digit
	dup '0' '9' between? if
		'0' -
		frac-scale @   10 div  dup   frac-scale !
		*   frac-portion @   +   frac-portion !
	else
		DecimalParseError raise
	endif
	false
;

: decimal  ( str -- d )
	0 int-portion !   0 frac-portion !   fixed-point-scaling @  frac-scale !
	1 cell after
	' decimal-int-digit scanz   1+   ' decimal-frac-digit scanz
	int-portion @  fixed-point-scaling @  *
	frac-portion @  +
;

#[
	5 fixed-point
	s" 123.45" decimal putd nl
	-12345 2 * putd nl
]


-- vim:ft=cantilever
